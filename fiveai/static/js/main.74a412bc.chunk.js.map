{"version":3,"sources":["Header.tsx","Land.ts","LandContext.tsx","Colours.ts","Regions.tsx","OverlappingLand.tsx","Continent.tsx","LandForm.tsx","LandForms.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["Header","className","landContains","a","b","x1","x2","y1","y2","landOverlaps","regionsFromChildLand","regions","land","childRegions","filter","region","regionContainedBy","length","regionNotContainedBy","children","parentRegionIndex","findIndex","regionContains","map","i","regionsFromLands","lands","reduce","nonOverlapping","overlappingLands","stillNonOverlapping","otherLand","doesntOverlap","nowOverlapping","overlaps","sameLandAs","other","JSON","stringify","defaultLands","stateFromLands","StateContext","createContext","undefined","UpdateContext","EditContext","LandContext","useState","currentLands","setCurrentLands","newLand","useCallback","oldLands","deleteLand","index","newLands","splice","updateLand","oldLand","hoveredLand","setHoveredLand","editingLand","setEditingLand","landIsHovered","useMemo","landBeingEdited","Provider","value","editingMode","useCurrentLands","state","useContext","Error","useCurrentRegions","useEditLands","edit","useEditingLands","greens","Region","getX","getY","colourOffset","left","top","width","height","classnames","style","backgroundColor","title","Regions","key","OverlappingLand","valueToPercent","min","max","margin","Continent","extents","React","x","y","Input","set","editing","error","onChange","event","target","toString","LandForm","submit","overlapping","errors","setErrors","submitted","setSubmitted","showSave","setShowSave","x1string","setX1","x2string","setX2","y1string","setY1","y2string","setY2","validate","newErrors","Number","parseFloat","isNaN","push","trySubmit","withValidate","setter","includes","type","onClick","role","aria-label","LandForms","update","useUpdateCurrentLands","showNew","setShowNew","useEffect","onMouseOver","onMouseLeave","some","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.74a412bc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.scss';\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">FiveAI Coding Exercise</h1>\n    </header>\n  );\n}\n","export interface Land {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\nexport function landContains(a: Land, b: Land): boolean {\n  return a.x1 < b.x1 && a.x2 > b.x2 && a.y1 < b.y1 && a.y2 > b.y2;\n}\n\nexport function landOverlaps(a: Land, b: Land): boolean {\n  return (\n    !landContains(a, b) &&\n    !landContains(b, a) &&\n    b.x1 <= a.x2 &&\n    b.x2 >= a.x1 &&\n    b.y1 <= a.y2 &&\n    b.y2 >= a.y1\n  );\n}\n\nexport interface Region {\n  land: Land;\n  children: Region[];\n}\n\nexport const numberOfLands = (regions: Region[]): number =>\n  regions.reduce(\n    (a, region) =>\n      a +\n      (region.children.length === 0 ? 1 : 1 + numberOfLands(region.children)),\n    0,\n  );\n\nconst overlaps = (land: Land) => (otherLand: Land) =>\n  landOverlaps(otherLand, land);\n\nconst doesntOverlap = (land: Land) => (otherLand: Land) =>\n  !landOverlaps(otherLand, land);\n\nconst regionContainedBy = (land: Land) => (region: Region) =>\n  landContains(land, region.land);\n\nconst regionNotContainedBy = (land: Land) => (region: Region) =>\n  !landContains(land, region.land);\n\nconst regionContains = (land: Land) => (region: Region) =>\n  landContains(region.land, land);\n\nexport interface Regions {\n  overlappingLands: Land[];\n  regions: Region[];\n}\n\ninterface AnalysedLands {\n  nonOverlapping: Land[];\n  overlappingLands: Land[];\n}\n\nfunction regionsFromChildLand(regions: Region[], land: Land): Region[] {\n  const childRegions = regions.filter(regionContainedBy(land), []);\n  if (childRegions.length > 0) {\n    return [\n      ...regions.filter(regionNotContainedBy(land)),\n      {land, children: childRegions},\n    ];\n  }\n  const parentRegionIndex = regions.findIndex(regionContains(land));\n  if (parentRegionIndex === -1) {\n    return [...regions, {land, children: []}];\n  }\n  return regions.map((region, i) =>\n    i !== parentRegionIndex\n      ? region\n      : {\n          land: region.land,\n          children: regionsFromChildLand(region.children, land),\n        },\n  );\n}\n\nexport function regionsFromLands(lands: Land[]): Regions {\n  const {nonOverlapping, overlappingLands} = lands.reduce(\n    ({nonOverlapping, overlappingLands}, land) => {\n      const stillNonOverlapping = nonOverlapping.filter(doesntOverlap(land));\n      if (stillNonOverlapping.length === nonOverlapping.length) {\n        return {\n          nonOverlapping: [...nonOverlapping, land],\n          overlappingLands,\n        };\n      }\n      const nowOverlapping = nonOverlapping.filter(overlaps(land));\n      return {\n        nonOverlapping: stillNonOverlapping,\n        overlappingLands: [...overlappingLands, ...nowOverlapping, land],\n      };\n    },\n    {nonOverlapping: [], overlappingLands: []} as AnalysedLands,\n  );\n  const regions = nonOverlapping.reduce(regionsFromChildLand, [] as Region[]);\n  return {\n    overlappingLands,\n    regions,\n  };\n}\n\nexport const sameLandAs = (land: Land) => (other: Land) =>\n  JSON.stringify(land) === JSON.stringify(other);\n","import React, {\n  useState,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\n\nimport {Land, regionsFromLands, Regions, sameLandAs} from './Land';\n\nconst defaultLands: Land[] = [\n  {x1: 1.0, y1: 1.0, x2: 10.0, y2: 6.0},\n  {x1: 1.5, y1: 1.5, x2: 6.0, y2: 5.0},\n  {x1: 2.0, y1: 2.0, x2: 3.0, y2: 3.0},\n  {x1: 2.0, y1: 3.5, x2: 3.0, y2: 4.5},\n  {x1: 3.5, y1: 2.0, x2: 5.5, y2: 4.5},\n  {x1: 4.0, y1: 3.5, x2: 5.0, y2: 4.0},\n  {x1: 4.0, y1: 2.5, x2: 5.0, y2: 3.0},\n  {x1: 7.0, y1: 3.0, x2: 9.5, y2: 5.5},\n  {x1: 7.5, y1: 4.0, x2: 8.0, y2: 5.0},\n  {x1: 8.5, y1: 3.5, x2: 9.0, y2: 4.5},\n  {x1: 3.0, y1: 7.0, x2: 8.0, y2: 10.0},\n  {x1: 5.0, y1: 7.5, x2: 7.5, y2: 9.5},\n  {x1: 5.5, y1: 8.0, x2: 6.0, y2: 9.0},\n  {x1: 6.5, y1: 8.0, x2: 7.0, y2: 9.0},\n];\n\ninterface UpdateFunctions {\n  newLand: (land: Land) => void;\n  deleteLand: (index: number) => void;\n  updateLand: (index: number, newLand: Land) => void;\n}\n\ninterface State {\n  lands: Land[];\n  regions: Regions;\n}\n\nconst stateFromLands = (lands: Land[]) => ({\n  lands,\n  regions: regionsFromLands(lands),\n});\n\nconst StateContext = createContext<State | undefined>(undefined);\nconst UpdateContext = createContext<UpdateFunctions | undefined>(undefined);\n\ninterface EditState {\n  editingMode: boolean;\n  landIsHovered: (l: Land) => boolean;\n  landBeingEdited: (l: Land) => boolean;\n  setHoveredLand: (l: Land | undefined) => void;\n  setEditingLand: (l: Land | undefined) => void;\n}\n\nconst EditContext = createContext<EditState | undefined>(undefined);\n\nexport default function LandContext({children}: {children: React.ReactNode}) {\n  const [currentLands, setCurrentLands] = useState(\n    stateFromLands(defaultLands),\n  );\n  const newLand = useCallback((land: Land) => {\n    setCurrentLands(oldLands => stateFromLands([...oldLands.lands, land]));\n  }, []);\n  const deleteLand = useCallback((index: number) => {\n    setCurrentLands(oldLands => {\n      const newLands = [...oldLands.lands];\n      newLands.splice(index, 1);\n      return stateFromLands(newLands);\n    });\n  }, []);\n  const updateLand = useCallback((index: number, newLand: Land) => {\n    setCurrentLands(oldLands =>\n      stateFromLands(\n        oldLands.lands.map((oldLand, i) => (i === index ? newLand : oldLand)),\n      ),\n    );\n  }, []);\n  const [hoveredLand, setHoveredLand] = useState<undefined | Land>(undefined);\n  const [editingLand, setEditingLand] = useState<undefined | Land>(undefined);\n  const landIsHovered = useMemo(\n    () => (hoveredLand ? sameLandAs(hoveredLand) : () => false),\n    [hoveredLand],\n  );\n  const landBeingEdited = useMemo(\n    () => (editingLand ? sameLandAs(editingLand) : () => false),\n    [editingLand],\n  );\n  return (\n    <StateContext.Provider value={currentLands}>\n      <UpdateContext.Provider value={{newLand, deleteLand, updateLand}}>\n        <EditContext.Provider\n          value={{\n            landIsHovered,\n            landBeingEdited,\n            setHoveredLand,\n            setEditingLand,\n            editingMode: editingLand !== undefined,\n          }}>\n          {children}\n        </EditContext.Provider>\n      </UpdateContext.Provider>\n    </StateContext.Provider>\n  );\n}\n\nexport function useCurrentLands() {\n  const state = useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(\n      'useCurrentLands must be used in a child of <LandContext />',\n    );\n  }\n  return state.lands;\n}\n\nexport function useCurrentRegions() {\n  const state = useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(\n      'useCurrentRegions must be used in a child of <LandContext />',\n    );\n  }\n  return state.regions;\n}\n\nexport function useUpdateCurrentLands() {\n  const update = useContext(UpdateContext);\n  if (update === undefined) {\n    throw new Error(\n      'useUpdateCurrentLands must be used in a child of <LandContext />',\n    );\n  }\n  return update;\n}\n\nexport function useEditLands() {\n  const edit = useContext(EditContext);\n  if (edit === undefined) {\n    throw new Error('useEditLands must be used in a child of <LandContext />');\n  }\n  return {\n    setEditingLand: edit.setEditingLand,\n    setHoveredLand: edit.setHoveredLand,\n  };\n}\n\nexport function useEditingLands() {\n  const edit = useContext(EditContext);\n  if (edit === undefined) {\n    throw new Error('useEditLands must be used in a child of <LandContext />');\n  }\n  return {\n    editingMode: edit.editingMode,\n    landIsHovered: edit.landIsHovered,\n    landBeingEdited: edit.landBeingEdited,\n  };\n}\n","export const greens = [\n  'darkolivegreen',\n  'olive',\n  'olivedrab',\n  'yellowgreen',\n  'limegreen',\n  'lime',\n  'lawngreen',\n  'chartreuse',\n  'greenyellow',\n  'springgreen',\n  'mediumspringgreen',\n  'lightgreen',\n  'palegreen',\n  'darkseagreen',\n  'mediumaquamarine',\n  'mediumseagreen',\n  'seagreen',\n  'forestgreen',\n  'green',\n  'darkgreen',\n];\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport {Region as RegionType} from './Land';\nimport {greens} from './Colours';\nimport {useEditingLands} from './LandContext';\n\ninterface RegionProps {\n  getX: (x: number) => number;\n  getY: (y: number) => number;\n  region: RegionType;\n  colourOffset: number;\n}\n\nfunction Region({\n  getX,\n  getY,\n  region: {land, children},\n  colourOffset,\n}: RegionProps) {\n  const {landBeingEdited, landIsHovered, editingMode} = useEditingLands();\n  const left = `${getX(land.x1)}%`;\n  const top = `${getY(land.y1)}%`;\n  const width = `${getX(land.x2) - getX(land.x1)}%`;\n  const height = `${getY(land.y2) - getY(land.y1)}%`;\n  return (\n    <>\n      <div\n        className={classnames('continent__region', {\n          'continent__region--edited': landBeingEdited(land),\n          'continent__region--hovered': !editingMode && landIsHovered(land),\n        })}\n        style={{\n          left,\n          top,\n          width,\n          height,\n          backgroundColor: greens[colourOffset % greens.length],\n        }}\n        title={`(${land.x1}, ${land.y1}) -> (${land.x2}, ${land.y2})`}\n      />\n      <Regions\n        getX={getX}\n        getY={getY}\n        regions={children}\n        colourOffset={colourOffset + 1}\n      />\n    </>\n  );\n}\n\ninterface Props {\n  getX: (x: number) => number;\n  getY: (y: number) => number;\n  regions: RegionType[];\n  colourOffset: number;\n}\n\nexport default function Regions({getX, getY, regions, colourOffset}: Props) {\n  return (\n    <>\n      {regions.map((region, i) => (\n        <Region\n          key={`region${colourOffset}-${i}`}\n          region={region}\n          getX={getX}\n          getY={getY}\n          colourOffset={colourOffset}\n        />\n      ))}\n    </>\n  );\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './OverlappingLand.scss';\nimport {Land} from './Land';\nimport {useEditingLands} from './LandContext';\n\ninterface Props {\n  getX: (x: number) => number;\n  getY: (y: number) => number;\n  land: Land;\n}\n\nexport default function OverlappingLand({getX, getY, land}: Props) {\n  const {landBeingEdited, landIsHovered, editingMode} = useEditingLands();\n  const left = `${getX(land.x1)}%`;\n  const top = `${getY(land.y1)}%`;\n  const width = `${getX(land.x2) - getX(land.x1)}%`;\n  const height = `${getY(land.y2) - getY(land.y1)}%`;\n  return (\n    <div\n      className={classnames('overlapping-land', {\n        'overlapping-land--hovered': !editingMode && landIsHovered(land),\n        'overlapping-land--edited': landBeingEdited(land),\n      })}\n      title={`(${land.x1}, ${land.y1}) -> (${land.x2}, ${land.y2})`}\n      style={{\n        left,\n        top,\n        width,\n        height,\n      }}\n    />\n  );\n}\n","import React, {useCallback} from 'react';\n\nimport './Continent.scss';\nimport {useCurrentRegions, useCurrentLands} from './LandContext';\nimport Regions from './Regions';\nimport OverlappingLand from './OverlappingLand';\n\nconst valueToPercent = (\n  value: number,\n  min: number,\n  max: number,\n  margin: number,\n) => (100 * (value - min + margin)) / (max - min + margin + margin);\n\nexport default function Continent() {\n  const lands = useCurrentLands();\n  const extents: undefined | number[] = React.useMemo(\n    () =>\n      lands.reduce((a, land) => {\n        if (a === undefined) {\n          return [land.x1, land.x2, land.y1, land.y2];\n        }\n        return [\n          a[0] > land.x1 ? land.x1 : a[0],\n          a[1] < land.x2 ? land.x2 : a[1],\n          a[2] > land.y1 ? land.y1 : a[2],\n          a[3] < land.y2 ? land.y2 : a[3],\n        ];\n      }, undefined as undefined | number[]),\n    [lands],\n  );\n  const getX = useCallback(\n    (x: number) =>\n      extents ? valueToPercent(x, extents[0], extents[1], 0.5) : 0,\n    [extents],\n  );\n  const getY = useCallback(\n    (y: number) => (extents ? valueToPercent(y, extents[2], extents[3], 1) : 0),\n    [extents],\n  );\n  const {overlappingLands, regions} = useCurrentRegions();\n  return (\n    <>\n      <div className=\"continent\">\n        <Regions regions={regions} getX={getX} getY={getY} colourOffset={0} />\n        {overlappingLands.map((land, i) => (\n          <OverlappingLand\n            key={`overlappingLand${i}`}\n            getX={getX}\n            getY={getY}\n            land={land}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","import React, {useState, useCallback} from 'react';\nimport classnames from 'classnames';\n\nimport './LandForm.scss';\nimport './Modal.scss';\nimport {Land} from './Land';\nimport {useEditLands, useEditingLands} from './LandContext';\n\ninterface InputProps {\n  value: string;\n  set: (newValue: string) => void;\n  editing: boolean;\n  error: boolean;\n}\n\nfunction Input({value, set, editing, error}: InputProps) {\n  const onChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      set(event.target.value);\n    },\n    [set],\n  );\n  if (!editing) {\n    return (\n      <span className=\"land-form__input land-form__input--readonly\">\n        {value}\n      </span>\n    );\n  }\n  return (\n    <input\n      className={classnames('land-form__input', {\n        'land-form__input--error': error,\n      })}\n      value={value !== undefined ? value.toString() : ''}\n      onChange={onChange}\n    />\n  );\n}\n\ninterface Props {\n  land: Land | undefined;\n  submit: (updated: Land) => void;\n  deleteLand: (() => void) | undefined;\n  overlapping: boolean;\n}\n\nexport default function LandForm({\n  land,\n  submit,\n  deleteLand,\n  overlapping,\n}: Props) {\n  const {setEditingLand} = useEditLands();\n  const {landBeingEdited, landIsHovered, editingMode} = useEditingLands();\n  const editing = land ? landBeingEdited(land) : !editingMode;\n  const [errors, setErrors] = useState<string[]>([]);\n  const [submitted, setSubmitted] = useState(false);\n  const [showSave, setShowSave] = useState(false);\n  const [x1string, setX1] = useState(land ? land.x1.toString() : '');\n  const [x2string, setX2] = useState(land ? land.x2.toString() : '');\n  const [y1string, setY1] = useState(land ? land.y1.toString() : '');\n  const [y2string, setY2] = useState(land ? land.y2.toString() : '');\n  const validate = useCallback(() => {\n    const newErrors = [];\n    const x1 = Number.parseFloat(x1string);\n    const x2 = Number.parseFloat(x2string);\n    const y1 = Number.parseFloat(y1string);\n    const y2 = Number.parseFloat(y2string);\n    if (Number.isNaN(x1)) {\n      newErrors.push('x1');\n    }\n    if (Number.isNaN(x2)) {\n      newErrors.push('x2');\n    }\n    if (Number.isNaN(y1)) {\n      newErrors.push('y1');\n    }\n    if (Number.isNaN(y2)) {\n      newErrors.push('y2');\n    }\n    if (newErrors.length === 0) {\n      if (x1 >= x2) {\n        newErrors.push('x1');\n        newErrors.push('x2');\n      }\n      if (y1 >= y2) {\n        newErrors.push('y1');\n        newErrors.push('y2');\n      }\n    }\n    setErrors(newErrors);\n    setSubmitted(true);\n    return newErrors.length === 0 ? {x1, x2, y1, y2} : undefined;\n  }, [x1string, x2string, y1string, y2string]);\n  const trySubmit = useCallback(() => {\n    setSubmitted(true);\n    const newLand = validate();\n    if (newLand) {\n      submit(newLand);\n      setEditingLand(undefined);\n    }\n  }, [setEditingLand, submit, validate]);\n  const withValidate = useCallback(\n    (setter: (value: string) => void) => (value: string) => {\n      setter(value);\n      if (submitted) {\n        validate();\n      }\n    },\n    [submitted, validate],\n  );\n  return (\n    <div\n      className={classnames('land-form', {\n        'land-form--overlapping': overlapping && !editingMode,\n        'land-form--edited': editing,\n        'land-form--hovered':\n          land && !editingMode ? landIsHovered(land) : false,\n      })}>\n      <div className=\"land-form__inputs\">\n        (\n        <Input\n          editing={editing}\n          value={x1string}\n          set={withValidate(setX1)}\n          error={errors.includes('x1')}\n        />\n        ,{' '}\n        <Input\n          editing={editing}\n          value={y1string}\n          set={withValidate(setY1)}\n          error={errors.includes('y1')}\n        />\n        ) → (\n        <Input\n          editing={editing}\n          value={x2string}\n          set={withValidate(setX2)}\n          error={errors.includes('x2')}\n        />\n        ,{' '}\n        <Input\n          editing={editing}\n          value={y2string}\n          set={withValidate(setY2)}\n          error={errors.includes('y2')}\n        />\n        )\n      </div>\n      <div className=\"land-form__actions\">\n        {editing && deleteLand && (\n          <button\n            className=\"land-form__action\"\n            type=\"button\"\n            title=\"Cancel\"\n            onClick={() => setEditingLand(undefined)}>\n            <span role=\"img\" aria-label=\"Cancel\">\n              🔙\n            </span>\n          </button>\n        )}\n        {editing && (\n          <button\n            className=\"land-form__action\"\n            type=\"button\"\n            title=\"Save\"\n            onClick={trySubmit}>\n            <span role=\"img\" aria-label=\"Save\">\n              💾\n            </span>\n          </button>\n        )}\n        {!editing && !editingMode && (\n          <button\n            className=\"land-form__action\"\n            type=\"button\"\n            title=\"Edit\"\n            onClick={() => setEditingLand(land)}>\n            <span role=\"img\" aria-label=\"Edit\">\n              ✏️\n            </span>\n          </button>\n        )}\n        {!editing && !editingMode && deleteLand && (\n          <>\n            <button\n              className=\"land-form__action\"\n              type=\"button\"\n              title=\"Delete\"\n              onClick={() => setShowSave(true)}>\n              <span role=\"img\" aria-label=\"Delete\">\n                ❌\n              </span>\n            </button>\n            <div className={showSave ? 'modal modal--visible' : 'modal'}>\n              <div className=\"modal__wrapper\">\n                <p className=\"modal__heading\">Delete this land mass?</p>\n                <div className=\"modal__buttons\">\n                  <button\n                    type=\"button\"\n                    title=\"Confirm deletion\"\n                    className=\"modal__button modal__button--ok\"\n                    onClick={() => {\n                      setShowSave(false);\n                      deleteLand();\n                    }}>\n                    OK\n                  </button>\n                  <button\n                    type=\"button\"\n                    title=\"Close\"\n                    className=\"modal__button modal__button--close\"\n                    onClick={() => setShowSave(false)}>\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\n\nimport {\n  useCurrentLands,\n  useUpdateCurrentLands,\n  useCurrentRegions,\n  useEditLands,\n  useEditingLands,\n} from './LandContext';\nimport {Land, sameLandAs} from './Land';\nimport LandForm from './LandForm';\n\nexport default function LandForms() {\n  const lands = useCurrentLands();\n  const {overlappingLands} = useCurrentRegions();\n  const {updateLand, deleteLand, newLand} = useUpdateCurrentLands();\n  const {setHoveredLand} = useEditLands();\n  const {editingMode} = useEditingLands();\n  const [showNew, setShowNew] = useState(false);\n  useEffect(() => {\n    setShowNew(false);\n  }, [lands]);\n  return (\n    <>\n      <ul className=\"land-forms\">\n        {lands.map((land, index) => (\n          <li\n            key={`landForm${index}${JSON.stringify(land)}`}\n            className=\"land-forms__form\"\n            onMouseOver={() => setHoveredLand(land)}\n            onMouseLeave={() => setHoveredLand(undefined)}>\n            <LandForm\n              land={land}\n              submit={(land: Land) => updateLand(index, land)}\n              deleteLand={() => {\n                deleteLand(index);\n              }}\n              overlapping={overlappingLands.some(sameLandAs(land))}\n            />\n          </li>\n        ))}\n        {showNew && (\n          <li className=\"land-forms__form\">\n            <LandForm\n              land={undefined}\n              submit={(land: Land) => newLand(land)}\n              deleteLand={undefined}\n              overlapping={false}\n            />\n          </li>\n        )}\n      </ul>\n      {!showNew && !editingMode && (\n        <button\n          title=\"Add a new land mass\"\n          type=\"button\"\n          onClick={() => {\n            setShowNew(true);\n          }}>\n          <span role=\"img\" aria-label=\"Add new\">\n            ➕\n          </span>\n        </button>\n      )}\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport './App.scss';\nimport Header from './Header';\nimport LandContext from './LandContext';\nimport Continent from './Continent';\nimport LandForms from './LandForms';\n\nexport default function App() {\n  return (\n    <LandContext>\n      <article className=\"app\">\n        <section className=\"app__header\">\n          <Header />\n        </section>\n        <section className=\"app__body\">\n          <Continent />\n        </section>\n        <section className=\"app__info\">\n          <LandForms />\n        </section>\n      </article>\n    </LandContext>\n  );\n}\n"],"sourceRoot":""}