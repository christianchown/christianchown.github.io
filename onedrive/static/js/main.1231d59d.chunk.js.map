{"version":3,"sources":["folder.svg","Header.tsx","LoginForm.tsx","DriveContext.ts","Callout.tsx","Spinner.tsx","Breadcrumb.tsx","cipher.ts","Folder.tsx","sizeOf.ts","ProgressBar.tsx","File.tsx","get.ts","Browser.tsx","AuthContext.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","Header","loggedIn","className","href","LoginForm","useState","error","setError","useEffect","params","URLSearchParams","window","location","hash","substring","get","login","useCallback","open","protocol","host","pathname","close","type","onClick","defaultDirs","React","createContext","Callout","children","Spinner","Breadcrumb","currentDir","setCurrentDir","split","i","slice","join","map","path","arr","key","length","suffixes","codes","a","charCodeAt","z","A","Z","zero","nine","cipherString","source","shift","reduce","suffix","charAt","changeEnding","index","lastIndexOf","removeDot","c","charCode","Math","abs","String","fromCharCode","cipher","s","Folder","child","clickFolder","decode","src","folderSVG","width","height","alt","name","sizeOf","bytes","e","floor","log","pow","toFixed","ProgressBar","progress","total","cancel","style","File","download","downloading","setDownloading","setProgress","stream","useRef","undefined","reader","setReader","nom","Promise","resolve","reject","current","ReadableStream","start","controller","loaded","read","then","done","value","size","Response","byteLength","enqueue","response","blob","saveAs","catch","getPath","fetchChildren","escape","auth","setData","fetch","method","headers","Headers","Authorization","access_token","status","json","fetchContent","getContent","body","getReader","Browser","setDecode","drive","setDrive","fetched","folder","dir","DriveContext","Provider","Fragment","id","file","defaultAuth","user_id","Boolean","hostname","match","ReactDOM","render","setAuth","keys","Object","some","k","AuthContext","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1231d59d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/folder.fa19bc21.svg\";","import React from 'react';\nimport './Header.scss';\n\nexport default function Header({ loggedIn }: { loggedIn: boolean }) {\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrap\">\n        <div className=\"header__contents\">\n          <h1 className=\"header__title\">One Drive browser</h1>\n          {loggedIn && (\n            <a href=\"./\" className=\"header__logout\">\n              Logout\n            </a>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React, { useEffect, useState, useCallback } from 'react';\n\nexport default function LoginForm() {\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.hash.substring(1));\n    if (params.get('error_description')) {\n      setError(params.get('error_description')!);\n    }\n  }, []);\n  const login = useCallback(() => {\n    window.open(\n      `https://login.live.com/oauth20_authorize.srf?client_id=e5030219-3594-4bb3-8b14-d68501517da6&scope=onedrive.readwrite&response_type=token&redirect_uri=${window.location.protocol}//${window.location.host}${window.location.pathname}`,\n    );\n    window.close();\n  }, []);\n  if (!error) {\n    return (\n      <button type=\"button\" className=\"app__button\" onClick={login}>\n        Log in to your One Drive account\n      </button>\n    );\n  }\n  return <p className=\"app__text\">{error}</p>;\n}\n","import React from 'react';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\nexport const defaultDirs: {\n  [path: string]: MicrosoftGraph.DriveItem[];\n} = {};\n\nexport default React.createContext(defaultDirs);\n","import React from 'react';\nimport './Callout.scss';\n\nexport default function Callout({\n  type,\n  children,\n}: {\n  type: 'error' | 'info' | 'warning' | 'success';\n  children: React.ReactNode;\n}) {\n  return <div className={`callout callout--${type}`}>{children}</div>;\n}\n","import React from 'react';\nimport './Spinner.scss';\n\nexport default function Spinner() {\n  return <div className=\"lds-hourglass\"></div>;\n}\n","import React from 'react';\nimport './Breadcrumb.scss';\n\nexport default function Breadcrumb({\n  currentDir,\n  setCurrentDir,\n}: {\n  currentDir: string;\n  setCurrentDir: (s: string) => void;\n}) {\n  const split = currentDir.split('/');\n  function onClick(i: number) {\n    return () => {\n      setCurrentDir(split.slice(0, i + 1).join('/'));\n    };\n  }\n  return (\n    <nav className=\"breadcrumb\">\n      <ul className=\"breadcrumb__wrap\">\n        <p className=\"breadcrumb__text\">You are here:</p>\n        {split!.map((path, i, arr) => {\n          return (\n            <li className=\"breadcrumb__item\" key={`crumb${i}`}>\n              {i === arr.length - 1 ? (\n                i === 0 ? (\n                  '/'\n                ) : (\n                  path\n                )\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"breadcrumb__link\"\n                  onClick={onClick(i)}\n                >\n                  {i === 0 ? '/' : path}\n                </button>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n}\n","const suffixes = ['avi', 'mkv', 'mov', 'mpg', 'mpeg', 'mp4', 'pdf', 'jpg'];\n\nfunction changeEnding(source: string) {\n  return suffixes.reduce((a, suffix) => {\n    if (\n      a.length > suffix.length + 1 &&\n      a.substring(a.length - suffix.length) === suffix &&\n      a.charAt(a.length - suffix.length - 1) !== '.'\n    ) {\n      return `${a.substring(0, a.length - suffix.length)}.${suffix}`;\n    }\n    return a;\n  }, source);\n}\n\nfunction removeDot(source: string) {\n  return suffixes.reduce((a, suffix) => {\n    const index = a.lastIndexOf(`.${suffix}`);\n    if (\n      a.length > suffix.length + 1 &&\n      index === a.length - suffix.length - 1\n    ) {\n      return `${a.substring(0, a.length - suffix.length - 1)}${suffix}`;\n    }\n    return a;\n  }, source);\n}\n\nconst codes = {\n  a: 'a'.charCodeAt(0),\n  z: 'z'.charCodeAt(0),\n  A: 'A'.charCodeAt(0),\n  Z: 'Z'.charCodeAt(0),\n  zero: '0'.charCodeAt(0),\n  nine: '9'.charCodeAt(0),\n};\n\nfunction cipherString(source: string, shift: number) {\n  return changeEnding(\n    removeDot(source)\n      .split('')\n      .map(c => {\n        let charCode = c.charCodeAt(0);\n        if (charCode >= codes.a && charCode <= codes.z) {\n          charCode += shift;\n          while (charCode > codes.z) {\n            charCode -= 26;\n          }\n          while (charCode < codes.a) {\n            charCode += 26;\n          }\n        } else if (charCode >= codes.A && charCode <= codes.Z) {\n          charCode += shift;\n          while (charCode > codes.Z) {\n            charCode -= 26;\n          }\n          while (charCode < codes.A) {\n            charCode += 26;\n          }\n        } else if (\n          Math.abs(shift) === 1 &&\n          charCode >= codes.zero &&\n          charCode <= codes.nine\n        ) {\n          charCode += shift;\n          while (charCode > codes.nine) {\n            charCode -= 10;\n          }\n          while (charCode < codes.zero) {\n            charCode += 10;\n          }\n        }\n        return String.fromCharCode(charCode);\n      })\n      .join(''),\n  );\n}\n\nexport default function cipher(source: string, shift: number) {\n  const split = source.split('/');\n  return split\n    .map((s, i) => (i === split.length - 1 ? cipherString(s, shift) : s))\n    .join('/');\n}\n","import React from 'react';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport folderSVG from './folder.svg';\nimport cipher from './cipher';\n\nimport './Folder.scss';\n\nexport default function Folder({\n  child,\n  clickFolder,\n  decode,\n}: {\n  child: MicrosoftGraph.DriveItem;\n  clickFolder: () => void;\n  decode: boolean;\n}) {\n  return (\n    <div className=\"folder\">\n      <button className=\"folder__name\" type=\"button\" onClick={clickFolder}>\n        <img\n          className=\"folder__icon\"\n          src={folderSVG}\n          width=\"16\"\n          height=\"16\"\n          alt=\"Folder\"\n        />\n        {decode && child.name ? cipher(child.name, 1) : child.name}\n      </button>\n    </div>\n  );\n}\n","export default function sizeOf(bytes: number) {\n  if (bytes === 0) {\n    return 'Empty';\n  }\n  const e = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (\n    (bytes / Math.pow(1024, e)).toFixed(2) + ' ' + ' KMGTP'.charAt(e) + 'B'\n  );\n}\n","import React from 'react';\nimport sizeOf from './sizeOf';\nimport './ProgressBar.scss';\n\nexport default function ProgressBar({\n  progress,\n  total,\n  cancel,\n}: {\n  progress: number;\n  total: number;\n  cancel: () => void;\n}) {\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"progress__bar\"\n        style={{ width: `${(progress * 100) / total}%` }}\n      />\n      <p className=\"progress__text\">{sizeOf(progress)}</p>\n      <button type=\"button\" className=\"progress__cancel\" onClick={cancel}>\n        X\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { saveAs } from 'file-saver';\nimport cipher from './cipher';\nimport ProgressBar from './ProgressBar';\nimport sizeOf from './sizeOf';\n\nimport './File.scss';\n\nexport default function File({\n  child,\n  decode,\n  currentDir,\n  download,\n}: {\n  child: MicrosoftGraph.DriveItem;\n  decode: boolean;\n  currentDir: string;\n  download: (\n    path: string,\n    setReader: (reader: ReadableStreamDefaultReader<Uint8Array>) => void,\n  ) => Promise<void>;\n}) {\n  const [downloading, setDownloading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  let stream = useRef<ReadableStream>();\n  const [reader, setReader] = useState(undefined as\n    | undefined\n    | ReadableStreamDefaultReader<Uint8Array>);\n  const nom = decode && child.name ? cipher(child.name, 1) : child.name!;\n  function doDownload() {\n    setDownloading(true);\n    download(`${currentDir}/${child.name}`, setReader);\n  }\n  function cancel() {\n    if (reader) {\n      if (stream.current) {\n        stream.current.cancel();\n        stream.current = undefined;\n      }\n      reader.cancel();\n    }\n  }\n  useEffect(() => {\n    if (reader) {\n      const getStreamResponse = new Promise<Response>((resolve, reject) => {\n        stream.current = new ReadableStream({\n          start: controller => {\n            let loaded = 0;\n            function read() {\n              reader!.read().then(({ done, value }) => {\n                if (done) {\n                  setProgress(child.size || loaded);\n                  setDownloading(false);\n                  setReader(undefined);\n                  if (stream.current) {\n                    controller.close();\n                    resolve(new Response(stream.current));\n                  } else {\n                    reject('Cancelled');\n                  }\n                } else {\n                  loaded += value.byteLength;\n                  setProgress(loaded);\n                  controller.enqueue(value);\n                  read();\n                }\n              });\n            }\n            read();\n          },\n        });\n      });\n      getStreamResponse\n        .then(response => response.blob())\n        .then(blob => {\n          saveAs(blob, nom);\n        })\n        .catch(() => {\n          // nothing\n        });\n    }\n  }, [child.size, nom, reader]);\n\n  return (\n    <div className=\"file\">\n      {!downloading ? (\n        <button type=\"button\" className=\"file__link\" onClick={doDownload}>\n          {nom}\n        </button>\n      ) : (\n        <span className=\"file__downloading\">{nom}</span>\n      )}\n      <div className=\"file__download\">\n        {reader && (\n          <ProgressBar\n            progress={progress}\n            total={child.size || 0}\n            cancel={cancel}\n          />\n        )}\n      </div>\n      <span className=\"file__size\">{sizeOf(child.size || 0)}</span>\n    </div>\n  );\n}\n","import { Auth } from './AuthContext';\n\nfunction getChildren(path: string) {\n  return `https://api.onedrive.com/v1.0/drive/root:${escape(path)}:/children`;\n}\n\nfunction getContent(path: string) {\n  return `https://api.onedrive.com/v1.0/drive/root:${escape(path)}:/content`;\n}\n\nfunction getItems(getPath: (path: string) => string) {\n  return function authFetch(auth: Auth, setError: (s: string) => void) {\n    return function fetchWithAuth(path: string, setData: (d: any) => void) {\n      return fetch(getPath(path), {\n        method: 'get',\n        headers: new Headers({\n          Authorization: `Bearer ${auth.access_token}`,\n        }),\n      }).then(response => {\n        if (response.status !== 200) {\n          setError(`${path} returned a status of ${response.status}`);\n        } else {\n          response.json().then(json => setData(json));\n        }\n      });\n    };\n  };\n}\n\nexport const fetchChildren = getItems(getChildren);\n\nexport function fetchContent(auth: Auth, setError: (s: string) => void) {\n  return function fetchWithAuth(\n    path: string,\n    setReader: (r: ReadableStreamDefaultReader<Uint8Array>) => void,\n  ) {\n    return fetch(getContent(path), {\n      method: 'get',\n      headers: new Headers({\n        Authorization: `Bearer ${auth.access_token}`,\n      }),\n    }).then(response => {\n      if (response.status === 200 && response.body) {\n        setReader(response.body.getReader());\n      } else if (response.status !== 302) {\n        setError(`${path} returned a status of ${response.status}`);\n      } else {\n        window.open(response.headers.get('Location')!);\n      }\n      return Promise.resolve();\n    });\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport DriveContext, { defaultDirs } from './DriveContext';\nimport Callout from './Callout';\nimport Spinner from './Spinner';\nimport Breadcrumb from './Breadcrumb';\nimport Folder from './Folder';\nimport File from './File';\nimport { Auth } from './AuthContext';\nimport { fetchChildren, fetchContent } from './get';\n\nexport default function Browser({ auth }: { auth: Auth }) {\n  const [error, setError] = useState(undefined as undefined | string);\n  const [decode, setDecode] = useState(false);\n  const [currentDir, setCurrentDir] = useState('/');\n  const [drive, setDrive] = useState(defaultDirs);\n  const fetched = fetchChildren(auth, setError);\n  const download = fetchContent(auth, setError);\n  const current = drive[currentDir];\n  useEffect(() => {\n    if (!current) {\n      fetched(currentDir, (dir: { value: MicrosoftGraph.DriveItem[] }) => {\n        setDrive({\n          ...drive,\n          [currentDir]: dir.value,\n        });\n      });\n    }\n  }, [current, currentDir, drive, fetched]);\n  function clickFolder(folder: MicrosoftGraph.DriveItem) {\n    return () => {\n      setCurrentDir(`${currentDir === '/' ? '' : currentDir}/${folder.name}`);\n    };\n  }\n  function toggleDecode() {\n    setDecode(!decode);\n  }\n  return (\n    <DriveContext.Provider value={drive}>\n      {error && <Callout type=\"error\">{error}</Callout>}\n      <div className=\"app__controls\">\n        <Breadcrumb currentDir={currentDir} setCurrentDir={setCurrentDir} />\n        <button type=\"button\" className=\"app__button\" onClick={toggleDecode}>\n          {decode ? 'Actual name' : 'Decoded'}\n        </button>\n      </div>\n      {!current && <Spinner />}\n      {current && !current.length && <p className=\"app_text\">No items</p>}\n      {current &&\n        current.map(child => (\n          <React.Fragment key={child.id}>\n            {child.folder && (\n              <Folder\n                child={child}\n                clickFolder={clickFolder(child)}\n                decode={decode}\n              />\n            )}\n            {child.file && (\n              <File\n                child={child}\n                decode={decode}\n                currentDir={currentDir}\n                download={download}\n              />\n            )}\n          </React.Fragment>\n        ))}\n    </DriveContext.Provider>\n  );\n}\n","import React from 'react';\n\nexport interface Auth {\n  access_token?: string;\n  user_id?: string;\n}\n\nexport const defaultAuth: Auth = {\n  access_token: undefined,\n  user_id: undefined,\n};\n\nexport default React.createContext(defaultAuth);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport LoginForm from './LoginForm';\nimport Browser from './Browser';\nimport AuthContext, { defaultAuth, Auth } from './AuthContext';\nimport './App.scss';\n\nexport default function App() {\n  const [auth, setAuth] = useState<Auth>(defaultAuth);\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.hash.substring(1));\n    const keys = Object.keys(defaultAuth);\n    if (!keys.some(key => !params.get(key))) {\n      setAuth(\n        keys.reduce((a: Auth, k) => {\n          a[k as keyof Auth] = params.get(k)!;\n          return a;\n        }, {}),\n      );\n    }\n  }, []);\n  return (\n    <div className=\"app\">\n      <AuthContext.Provider value={auth}>\n        <Header loggedIn={!!auth.access_token} />\n        <div className=\"app__body\">\n          {!auth.access_token && <LoginForm />}\n          {auth.access_token && <Browser auth={auth} />}\n        </div>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n"],"sourceRoot":""}